{"version":3,"sources":["Components/TodoApp/TodoForm.jsx","Components/TodoApp/TodoItem.jsx","Components/TodoApp/TodoList.jsx","Components/Loader.jsx","Components/TodoApp/index.jsx","App.jsx","index.js"],"names":["TodoForm","createTodo","useState","newTodo","setNewTodo","Input","useRef","onSubmit","e","preventDefault","current","value","trim","className","type","name","id","onChange","target","ref","TodoItem","todo","index","deleteTodo","updateTodos","status","onDoubleClick","style","userSelect","onClick","TodoList","todos","map","item","Loader","TodoApp","setTodos","loading","setLoading","todoAction","setTodoAction","useEffect","a","fetch","method","headers","credentials","then","res","json","data","reverse","catch","error","console","log","message","getTodos","fetchType","new","update","delete","url","fetchData","body","JSON","stringify","Date","getTime","filteredTodos","filter","todoTmp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8847b635.chunk.js","sourcesContent":["import { useState, useRef } from \"react\";\n\nconst TodoForm = ({ createTodo }) => {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const Input = useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    Input.current.value = \"\";\n    if (newTodo.trim() === \"\") return;\n    createTodo(newTodo);\n    setNewTodo(\"\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"field has-addons\">\n        <div className=\"control is-expanded\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"\"\n            id=\"\"\n            onChange={(e) => setNewTodo(e.target.value)}\n            ref={Input}\n          />\n        </div>\n        <div className=\"control\">\n          <button className=\"button is-info\">+Add</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default TodoForm;\n","const TodoItem = ({ todo, index, deleteTodo, updateTodos }) => {\n  const noSelect = {\n    userSelect: \"none\",\n  };\n  function handleDoubleClick(e) {\n    updateTodos(index);\n  }\n\n  function handleClickClose(id) {\n    deleteTodo(id);\n  }\n\n  return (\n    <li\n      className={\n        todo.status\n          ? \"notification mb-1 is-success\"\n          : \"notification mb-1 is-light\"\n      }\n      key={todo.id}\n      id={todo.id}\n      onDoubleClick={handleDoubleClick}\n      style={noSelect}\n    >\n      <div\n        className=\"delete\"\n        data-id={index}\n        onClick={(e) => handleClickClose(index)}\n      />\n      {todo.todo}\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import TodoItem from \"./TodoItem\";\n\nconst TodoList = ({ todos, deleteTodo, updateTodos }) => {\n  return (\n    <ul className=\"mt-5\">\n      {todos.map((item, index) => (\n        <TodoItem\n          todo={item}\n          index={index}\n          key={item.id}\n          deleteTodo={deleteTodo}\n          updateTodos={updateTodos}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","const Loader = () => {\n\treturn(\n\t\t<div className=\"load\">\n\t\t\t<div>\n\t\t\t\t<div className=\"spinner\"></div>\n\t\t\t\t<p>Syncing...</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Loader;","import React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport Loader from \"../Loader\";\n\nconst TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [todoAction, setTodoAction] = useState({\n    type: null,\n    todo: {}\n  });\n\n  //useEffect to load storaged todos\n  useEffect(() => {\n    const getTodos = async () => {\n       await fetch(\"https://todos-9a65.restdb.io/rest/todos\", {\n                    method: \"GET\",\n                    headers: {\n                      \"x-apikey\": \"60f158b149cd3a5cfbd2291f\",\n                      \"Cache-Control\": \"no-cache\",\n                      \"content-type\": \"application/json\"\n                    },\n                    credentials: \"same-origin\"})\n                  .then(res => res.json())\n                  .then(data => setTodos([...data].reverse()))\n                  .catch(error => console.log(error.message));\n                  setLoading(false);\n                  }\n    getTodos();\n  }, []);\n\n  //useEffect to update todos on changes\n  useEffect(() => {\n    const fetchType = {\n      new: 'POST',\n      update: 'PUT',\n      delete: 'DELETE'\n    }\n    const url = `https://todos-9a65.restdb.io/rest/todos${(todoAction.type !== 'POST')? '/' + todoAction.todo[\"_id\"] : ''}`;\n    const api_key = \"60f158b149cd3a5cfbd2291f\";\n    const fetchData = async () => {\n        setLoading(true);\n        /* START_FETCH */\n        await fetch(url, {\n                      method: fetchType[todoAction.type],\n                      headers: {\n                        \"x-apikey\": api_key,\n                        \"cache-control\": \"no-cache\",\n                        \"content-type\": \"application/json\",\n                      },\n                      body: JSON.stringify(todoAction.todo),\n                      credentials: \"same-origin\"})\n                    .then(res => res.json())\n                    .then(data => console.log(data))\n                    .catch(error => console.log(error));\n        setLoading(false);\n    }\n    (todoAction.type) && fetchData();\n    /* END_FETCH */\n\n    setTodoAction({type: null, todo: {}});\n  }, [todos]);\n\n  //Create todo function\n  function createTodo(todo) {\n    let newTodo = { id: new Date().getTime(), todo, status: false };\n    setTodoAction({type: 'new', todo: {...newTodo}});\n    setTodos([newTodo, ...todos]);\n  }\n\n  //Update todo status function\n  function updateTodos(todo) {\n    const todoTmp = todos[todo];\n    todoTmp.status = !todoTmp.status;\n    setTodoAction({type: 'update', todo: {...todoTmp}});\n    setTodos([...todos], todoTmp);\n  }\n\n  //Delete todo function\n  function deleteTodo(id) {\n    const filteredTodos = todos.filter((todo, index) => index !== id);\n    const deleteTodo = todos.filter((todo, index) => index === id);\n    setTodoAction({type: 'delete', todo: {...deleteTodo[0]}});\n    setTodos([...filteredTodos]);\n  }\n\n  return (\n    <div className=\"section mt-5 pt-0\">\n      {(loading) && <Loader />}\n      <TodoForm createTodo={createTodo} />\n      <TodoList\n        todos={todos}\n        deleteTodo={deleteTodo}\n        updateTodos={updateTodos}\n      />\n      {/*<FilterButtons />*/}\n    </div>\n  );\n};\n\nexport default TodoApp;\n","import \"bulma/css/bulma.min.css\";\nimport \"./style.css\";\nimport TodoApp from \"./Components/TodoApp\";\n\nexport default function App() {\n  return (\n    <div className=\"columns is-centered\">\n      <div className=\"column is-6-desktop is-8-tablet\">\n        <div className=\"section mb-0 pb-0\">\n          <h1 className=\"title\">React ToDo</h1>\n          <p className=\"subtitle\">The power of procastinate!</p>\n        </div>\n        <TodoApp />\n      </div>\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}